from info import API_ID, API_HASH, CLONE_MODE, LOG_CHANNEL
from pyrogram import Client, filters, enums
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup, BotCommand
from database.users_chats_db import db
import re
from Script import script

@Client.on_message(filters.command('clone'))
async def clone_menu(client, message):
    try:
        if await db.is_clone_exist(message.from_user.id):
            return await message.reply("** è·¥è·¥ú  ú·¥Ä·¥†·¥á ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥Ñ ü·¥è…¥·¥á·¥Ö ·¥Ä  ô·¥è·¥õ ·¥Ö·¥á ü·¥á·¥õ·¥á “ì…™ Äs·¥õ …™·¥õ  ô è /deleteclone**")

        techvj = await client.ask(message.chat.id, "<b>1) s·¥á…¥·¥Ö <code>/newbot</code> ·¥õ·¥è @BotFather\n2) …¢…™·¥†·¥á ·¥Ä …¥·¥Ä·¥ç·¥á Íú∞·¥è Ä  è·¥è·¥ú Ä  ô·¥è·¥õ.\n3) …¢…™·¥†·¥á ·¥Ä ·¥ú…¥…™«´·¥ú·¥á ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á.\n4) ·¥õ ú·¥á…¥  è·¥è·¥ú ·¥°…™ ü ü …¢·¥á·¥õ ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á ·¥°…™·¥õ ú  è·¥è·¥ú Ä  ô·¥è·¥õ ·¥õ·¥è·¥ã·¥á…¥.\n5) Íú∞·¥è Ä·¥°·¥Ä Ä·¥Ö ·¥õ ú·¥Ä·¥õ ·¥ç·¥áss·¥Ä…¢·¥á ·¥õ·¥è ·¥ç·¥á.\n\n/cancel - ·¥Ñ·¥Ä…¥·¥Ñ·¥á ü ·¥õ ú…™s ·¥ò Ä·¥è·¥Ñ·¥áss.</b>")
        if techvj.text == '/cancel':
            await techvj.delete()
            return await message.reply('<b>·¥Ñ·¥Ä…¥·¥Ñ·¥á ü·¥á·¥Ö ·¥õ ú…™s ·¥ò Ä·¥è·¥Ñ·¥áss üö´</b>')

        if techvj.forward_from and techvj.forward_from.id == 93372553:
            try:
                bot_token = re.findall(r"\b(\d+:[A-Za-z0-9_-]+)\b", techvj.text)[0]
            except Exception as e:
                print(f"Error extracting bot token: {e}")
                return await message.reply('<b>s·¥è·¥ç·¥á·¥õ ú…™…¥…¢ ·¥°·¥á…¥·¥õ ·¥° Ä·¥è…¥…¢ üòï</b>')
        else:
            return await message.reply('<b>…¥·¥è·¥õ Íú∞·¥è Ä·¥°·¥Ä Ä·¥Ö·¥á·¥Ö Íú∞ Ä·¥è·¥ç @BotFather üòë</b>')

        user_id = message.from_user.id
        msg = await message.reply_text("**üë®‚Äçüíª ·¥°·¥Ä…™·¥õ ·¥Ä ·¥ç…™…¥·¥ú·¥õ·¥á …™ ·¥Ä·¥ç ·¥Ñ Ä·¥á·¥Ä·¥õ…™…¥…¢  è·¥è·¥ú Ä  ô·¥è·¥õ ‚ù£Ô∏è**")

        try:
            vj = Client(
                f"{bot_token}", API_ID, API_HASH,
                bot_token=bot_token,
                plugins={"root": "CloneTechVJ"}
            )
            await vj.start()
            bot = await vj.get_me()
            await db.add_clone_bot(bot.id, user_id, bot_token)
            success_message = f"<b>s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ·¥Ñ ü·¥è…¥·¥á·¥Ö  è·¥è·¥ú Ä  ô·¥è·¥õ: @{bot.username}.\n\n è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥Ñ·¥ús·¥õ·¥è·¥ç…™s·¥á  è·¥è·¥ú Ä ·¥Ñ ü·¥è…¥·¥á  ô·¥è·¥õ  ô è /settings ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö …™…¥  è·¥è·¥ú Ä ·¥Ñ ü·¥è…¥·¥á  ô·¥è·¥õ</b>"
            await msg.edit_text(success_message)

            # Send the success message to the log channel
            await client.send_message(
                chat_id=LOG_CHANNEL,
                text=success_message
            )
        except BaseException as e:
            print(f"Error during bot creation: {e}")
            await msg.edit_text(f"‚ö†Ô∏è <b>Bot Error:</b>\n\n<code>{e}</code>\n\n**Kindly forward this message to @KingVJ01 to get assistance.**")

    except Exception as e:
        print(f"Error in clone_menu: {e}")
        await message.reply("**s·¥è·¥ç·¥á·¥õ ú…™…¥…¢ ·¥°·¥á…¥·¥õ ·¥° Ä·¥è…¥…¢ üòï**")

@Client.on_message(filters.command('deleteclone'))
async def delete_clone_menu(client, message):
    try:
        if await db.is_clone_exist(message.from_user.id):
            await db.delete_clone(message.from_user.id)
            await message.reply("**s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ·¥Ö·¥á ü·¥á·¥õ·¥á·¥Ö  è·¥è·¥ú Ä ·¥Ñ ü·¥è…¥·¥á  ô·¥è·¥õ,  è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥Ñ Ä·¥á·¥Ä·¥õ·¥á ·¥Ä…¢·¥Ä…™…¥  ô è /clone**")
        else:
            await message.reply("**…¥·¥è ·¥Ñ ü·¥è…¥·¥á  ô·¥è·¥õ “ì·¥è·¥ú…¥·¥Ö**")
    except Exception as e:
        print(f"Error in delete_clone_menu: {e}")
        await message.reply("**s·¥è·¥ç·¥á·¥õ ú…™…¥…¢ ·¥°·¥á…¥·¥õ ·¥° Ä·¥è…¥…¢ üòï**")

async def restart_bots():
    try:
        bots_cursor = await db.get_all_bots()
        bots = await bots_cursor.to_list(None)
        for bot in bots:
            bot_token = bot['bot_token']
            try:
                vj = Client(
                    f"{bot_token}", API_ID, API_HASH,
                    bot_token=bot_token,
                    plugins={"root": "CloneTechVJ"},
                )
                await vj.start()
            except Exception as e:
                print(f"Error while restarting bot with token {bot_token}: {e}")
    except Exception as e:
        print(f"Error in restart_bots: {e}")
